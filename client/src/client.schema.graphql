type Query {
  asset(uri: ID! = "foo#test"): Asset!
  transaction(uris: [ID!]!): [Transaction!]!
}

type Asset {
  uri: ID!
  precision: Int!
  id: String!
  domain: Domain!
}

type Domain {
  uri: ID!
}

type Transaction {
  uri: ID!
  status: TransactionStatus!
  commands: String!
  creator: Account!
}

enum TransactionStatus {
  NONE
  COMMITTED
  ENOUGH_SIGNATURES_COLLECTED
  REJECTED
  STATEFUL_VALIDATION_FAILED
  STATELESS_VALIDATION_FAILED
}

type Account {
  uri: ID!
  id: String!
  domain: Domain!
}

type Mutation {
  createAsset(inputAsset: IAsset!): Transaction!
}

input IAsset {
  id: String!
  domain: IDomain!
  precision: Int!
}

input IDomain {
  uri: ID!
}
